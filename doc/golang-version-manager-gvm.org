#+TITLE: Gvm Golang Version Manager


* Install Gvm

#+BEGIN_SRC sh :exports both
bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
#+END_SRC

#+RESULTS:
#+BEGIN_EXAMPLE
Cloning from https://github.com/moovweb/gvm.git to /Users/eric/.gvm
Created profile for existing install of Go at "/usr/local/Cellar/go/1.14.3/libexec"
Installed GVM v1.0.22

Please restart your terminal session or to get started right away run
 `source /Users/eric/.gvm/scripts/gvm`
#+END_EXAMPLE

#+BEGIN_SRC sh :exports both
cat ~/.gvm/scripts/gvm >> ~/.zshrc
#+END_SRC

** Prerequestist on macOS

#+BEGIN_SRC sh
xcode-select --install
brew update
brew install mercurial
#+END_SRC

* Intro

Gvm 本质原理就是下载不同的 golang 版本然后统一管理 GOPATH & GOROOT

- ~/.gvm
 
#+BEGIN_EXAMPLE
archive             # go 源码
bin                 # gvm 可执行文件
environments        # 不同环境的环境变量配置
scripts             # gvm 的子命令脚本
logs                # 日志信息
pkgsets             # 每个独立环境 gopath 所在路径
#+END_EXAMPLE


* Usage

** list
#+BEGIN_SRC sh
gvm list     # installed versions
gvm listall  # available versions
#+END_SRC

** intall
#+BEGIN_SRC sh
GO_SOURCE_URL=git://github.com/golang/go gvm install go1.15beta1
#+END_SRC

** use

#+BEGIN_SRC sh
gvm use go1.15beta1 [--default]
#+END_SRC

** pkgset

开箱即用，Go 有一种出色而令人沮丧的管理包和模块的方式。默认情况下，如果你 go get
获取一个包，它将被下载到 $GOPATH 目录中的 src 和 pkg 目录下，然后可以使用 import
将其包含在你的 Go 程序中。这使得获得软件包变得很容易，特别是对于非特权用户，而不
需要 sudo 或 root 特权（很像 Python 中的 pip install --user）。然而，在不同的项
目中管理相同包的不同版本是非常困难的。

GVM 可以通过使用 ~pkgset~ 将项目的新目录附加到对应安装的 Go 版本的默认 ~$GOPATH~ 上，很好
地实现了项目之间包的管理和隔离，就像 $PATH 在 Unix/Linux 系统上工作一样。

#+BEGIN_EXAMPLE
gvm use go1.1
gvm pkgset use current-known-good
# Let's assume that this includes some C headers and native libraries, which
# Go's CGO facility wraps for us.  Let's assume that these native
# dependencies are at version V.

gvm pkgset create trial-next-version
# Let's assume that V+1 has come along and you want to safely trial it in
# your workspace.

gvm pkgset use trial-next-version
# Do your work here replicating current-known-good from above, but install
# V+1 into ${GVM_OVERLAY_PREFIX}.
#+END_EXAMPLE
