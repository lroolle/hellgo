#+TITLE: MacOS Catalina GDB


(please check gdb is codesigned - see taskgated(8))


* Install GDB :gdb:

#+BEGIN_SRC sh
brew install gdb
#+END_SRC


* Cerfificate

-> Keychain access -> Certificate assistance -> Create a certificate

- Name: gdb
- Identity Type: Self Signed Root
- Certificate Type: Code Signing
  - [x] Let me override defaults

-> continue -> until "Specify a Location for Certificate"

- [x] System

-> Keychain access -> search "gdb"

- Trust: check all "Always trust"

* Codesign

- Create file "gdb-entitlement.xml"

  #+BEGIN_SRC xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>com.apple.security.cs.debugger</key>
    <true/>
</dict>
</plist>

<!-- 作者：勥巭炛 -->
<!-- 链接：https://zhuanlan.zhihu.com/p/68398728 -->
<!-- 来源：知乎 -->
<!-- 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 -->
  #+END_SRC

- Codesign
#+BEGIN_SRC sh
codesign -entitlements gdb-entitlement.xml -fs gdb /usr/local/Cellar/gdb/{version}/bin/gdb
#+END_SRC

* Change default GDB bin

default is ~/usr/local/bin/gdb~

#+BEGIN_SRC sh
alias ggdb='/usr/local/Cellar/gdb/{version}/bin/gdb'
#+END_SRC


* Create ~.gdbinit~

=~/.gdbinit=

#+BEGIN_SRC sh
set startup-with-shell off
define g
python
import subprocess as p
cmd = [“go”, “env”, “GOROOT”]
gdb_cmd = “source %s/src/runtime/runtime-gdb.py” %   p.check_output(cmd)[:-1]
gdb.execute(gdb_cmd)
#+END_SRC

If =run= stuck like this

#+BEGIN_SRC sh
>run
Starting program: ./main
[New Thread 0x2903 of process 3257]
[New Thread 0x1c03 of process 3257]
#+END_SRC

#+RESULTS:

Then echo this to =.gdbinit=

#+BEGIN_SRC sh
echo "set startup-with-shell off" >> ~/.gdbinit
#+END_SRC

If *stucks*, then try ~sudo  gdb ./main~, or try another Terminal like =iTerm=...



* References

- https://sourceware.org/gdb/wiki/PermissionsDarwin
- https://zhuanlan.zhihu.com/p/68398728
- https://blog.csdn.net/qq_33154343/article/details/104784641
