#+TITLE: Readme

* ~make~ & ~new~

- ~make~:
  - Create a channel
  - Create a map with *space preallocated*
  - Create a slice with *space preallocated* or with *len != cap*
- ~new~:
  The main thing it makes easier is creating pointers to non-composite types.
  The two functions below are equivalent.
#+BEGIN_SRC go
func newInt1() *int { return new(int) }

func newInt2() *int {
    var i int
    return &i
}
#+END_SRC

#+RESULTS:
: 0xc0000aa008
: 0xc0000aa020

* Arrays & Slice

** Arrays

** Slices

#+BEGIN_SRC go
import "fmt"

func main() {
	s := []int{1, 2, 3}
	// fmt.Println(s == []int{1, 2,3}) ERROR: Slice can only be compared to nil
	fmt.Println(s == nil)
	fmt.Println(s)
}
#+END_SRC

#+RESULTS:
: false
: [1 2 3]
